--- nexus/nexusJNI.java 2010-05-12 19:52:01.000000000 +0000
+++ nexusJNI.java.patched 2010-05-12 19:49:26.000000000 +0000
@@ -175,49 +175,79 @@
   public final static native long SWIGNexusExecutorDriverUpcast(long jarg1);
 
   public static String SwigDirector_Scheduler_getFrameworkName(Scheduler self, long arg0) {
-    return self.getFrameworkName((arg0 == 0) ? null : new SchedulerDriver(arg0, false));
+    try {
+      return self.getFrameworkName((arg0 == 0) ? null : new SchedulerDriver(arg0, false));
+    } catch (Throwable t) { t.printStackTrace(); System.exit(-1); return null; }
   }
   public static long SwigDirector_Scheduler_getExecutorInfo(Scheduler self, long arg0) {
-    return ExecutorInfo.getCPtr(self.getExecutorInfo((arg0 == 0) ? null : new SchedulerDriver(arg0, false)));
+    try {
+      return ExecutorInfo.getCPtr(self.getExecutorInfo((arg0 == 0) ? null : new SchedulerDriver(arg0, false)));
+    } catch (Throwable t) { t.printStackTrace(); System.exit(-1); return 0; }
   }
   public static void SwigDirector_Scheduler_registered(Scheduler self, long d, String fid) {
-    self.registered((d == 0) ? null : new SchedulerDriver(d, false), fid);
+    try {
+      self.registered((d == 0) ? null : new SchedulerDriver(d, false), fid);
+    } catch (Throwable t) { t.printStackTrace(); System.exit(-1); }
   }
   public static void SwigDirector_Scheduler_resourceOffer(Scheduler self, long d, String oid, long offers) {
-    self.resourceOffer((d == 0) ? null : new SchedulerDriver(d, false), oid, new SlaveOfferVector(offers, false));
+    try {
+      self.resourceOffer((d == 0) ? null : new SchedulerDriver(d, false), oid, new SlaveOfferVector(offers, false));
+    } catch (Throwable t) { t.printStackTrace(); System.exit(-1); }
   }
   public static void SwigDirector_Scheduler_offerRescinded(Scheduler self, long d, String oid) {
-    self.offerRescinded((d == 0) ? null : new SchedulerDriver(d, false), oid);
+    try {
+      self.offerRescinded((d == 0) ? null : new SchedulerDriver(d, false), oid);
+    } catch (Throwable t) { t.printStackTrace(); System.exit(-1); }
   }
   public static void SwigDirector_Scheduler_statusUpdate(Scheduler self, long d, long status) {
-    self.statusUpdate((d == 0) ? null : new SchedulerDriver(d, false), new TaskStatus(status, false));
+    try {
+      self.statusUpdate((d == 0) ? null : new SchedulerDriver(d, false), new TaskStatus(status, false));
+    } catch (Throwable t) { t.printStackTrace(); System.exit(-1); }
   }
   public static void SwigDirector_Scheduler_frameworkMessage(Scheduler self, long d, long message) {
-    self.frameworkMessage((d == 0) ? null : new SchedulerDriver(d, false), new FrameworkMessage(message, false));
+    try {
+      self.frameworkMessage((d == 0) ? null : new SchedulerDriver(d, false), new FrameworkMessage(message, false));
+    } catch (Throwable t) { t.printStackTrace(); System.exit(-1); }
   }
   public static void SwigDirector_Scheduler_slaveLost(Scheduler self, long d, String sid) {
-    self.slaveLost((d == 0) ? null : new SchedulerDriver(d, false), sid);
+    try {
+      self.slaveLost((d == 0) ? null : new SchedulerDriver(d, false), sid);
+    } catch (Throwable t) { t.printStackTrace(); System.exit(-1); }
   }
   public static void SwigDirector_Scheduler_error(Scheduler self, long d, int code, String message) {
-    self.error((d == 0) ? null : new SchedulerDriver(d, false), code, message);
+    try {
+      self.error((d == 0) ? null : new SchedulerDriver(d, false), code, message);
+    } catch (Throwable t) { t.printStackTrace(); System.exit(-1); }
   }
   public static void SwigDirector_Executor_init(Executor self, long d, long args) {
-    self.init((d == 0) ? null : new ExecutorDriver(d, false), new ExecutorArgs(args, false));
+    try {
+      self.init((d == 0) ? null : new ExecutorDriver(d, false), new ExecutorArgs(args, false));
+    } catch (Throwable t) { t.printStackTrace(); System.exit(-1); }
   }
   public static void SwigDirector_Executor_launchTask(Executor self, long d, long task) {
-    self.launchTask((d == 0) ? null : new ExecutorDriver(d, false), new TaskDescription(task, false));
+    try {
+      self.launchTask((d == 0) ? null : new ExecutorDriver(d, false), new TaskDescription(task, false));
+    } catch (Throwable t) { t.printStackTrace(); System.exit(-1); }
   }
   public static void SwigDirector_Executor_killTask(Executor self, long d, int taskId) {
-    self.killTask((d == 0) ? null : new ExecutorDriver(d, false), taskId);
+    try {
+      self.killTask((d == 0) ? null : new ExecutorDriver(d, false), taskId);
+    } catch (Throwable t) { t.printStackTrace(); System.exit(-1); }
   }
   public static void SwigDirector_Executor_frameworkMessage(Executor self, long d, long message) {
-    self.frameworkMessage((d == 0) ? null : new ExecutorDriver(d, false), new FrameworkMessage(message, false));
+    try {
+      self.frameworkMessage((d == 0) ? null : new ExecutorDriver(d, false), new FrameworkMessage(message, false));
+    } catch (Throwable t) { t.printStackTrace(); System.exit(-1); }
   }
   public static void SwigDirector_Executor_shutdown(Executor self, long d) {
-    self.shutdown((d == 0) ? null : new ExecutorDriver(d, false));
+    try {
+      self.shutdown((d == 0) ? null : new ExecutorDriver(d, false));
+    } catch (Throwable t) { t.printStackTrace(); System.exit(-1); }
   }
   public static void SwigDirector_Executor_error(Executor self, long d, int code, String message) {
-    self.error((d == 0) ? null : new ExecutorDriver(d, false), code, message);
+    try {
+      self.error((d == 0) ? null : new ExecutorDriver(d, false), code, message);
+    } catch (Throwable t) { t.printStackTrace(); System.exit(-1); }
   }
 
   private final static native void swig_module_init();
