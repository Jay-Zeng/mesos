# Makefile.

SHELL = '/bin/sh'

CC = @CC@
CXX = @CXX@
SWIG = @SWIG@

CFLAGS = @CFLAGS@
CXXFLAGS = @CXXFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@

OS_NAME = @OS_NAME@

JAVA_HOME = @JAVA_HOME@
PYTHON_HEADERS = @PYTHON_HEADERS@
RUBY_HEADERS = @RUBY_HEADERS@

WITH_WEBUI = @WITH_WEBUI@
WEBUI_FLAGS = @WEBUI_FLAGS@

LOCAL_ZOOKEEPER = @LOCAL_ZOOKEEPER@

LIBEV = third_party/libprocess/third_party/libev-3.8

GLOG = third_party/glog-0.3.1
GTEST = third_party/gtest-1.5.0
SQLITE = third_party/sqlite-3.6.23.1

ZOOKEEPER = third_party/zookeeper-3.3.1/src/c


# Ensure that we get better debugging info.
CFLAGS += -g
CXXFLAGS += -g

# Add current dir to CFLAGS and CXXFLAGS.
CFLAGS += -I.
CXXFLAGS += -I.

# Add include to CFLAGS and CXXFLAGS.
CFLAGS += -I../include
CXXFLAGS += -I../include

# Add boost to CFLAGS and CXXFLAGS.
CFLAGS += -Ithird_party/boost-1.37.0
CXXFLAGS += -Ithird_party/boost-1.37.0

# Add libprocess to CPPFLAGS, CFLAGS, CXXFLAGS, and LDFLAGS.
CFLAGS += -Ithird_party/libprocess
CXXFLAGS += -Ithird_party/libprocess
LDFLAGS += -Lthird_party/libprocess

# Add libev to LDFLAGS.
LDFLAGS += -L$(LIBEV)/.libs

# Add glog and gtest to include and lib paths.
CXXFLAGS += -I$(GLOG)/src -I$(GTEST)/include -I$(SQLITE)/
LDFLAGS += -L$(GLOG)/.libs -L$(GTEST)/lib/.libs -L$(SQLITE)/.libs

# Add local ZooKeeper to include and lib paths if necessary.
ifeq ($(LOCAL_ZOOKEEPER),yes)
  CXXFLAGS += -I$(ZOOKEEPER)/include -I$(ZOOKEEPER)/generated
  LDFLAGS += -L$(ZOOKEEPER)/.libs
endif

# Add dependency tracking to CFLAGS, CXXFLAGS.
CFLAGS += -MMD -MP
CXXFLAGS += -MMD -MP

# Add build date to CFLAGS, CXXFLAGS
CFLAGS += -DBUILD_DATE="\"$$(date '+%Y-%m-%d %H:%M:%S')\""
CXXFLAGS += -DBUILD_DATE="\"$$(date '+%Y-%m-%d %H:%M:%S')\""

# Add build user to CFLAGS, CXXFLAGS
CFLAGS += -DBUILD_USER="\"$$USER\""
CXXFLAGS += -DBUILD_USER="\"$$USER\""

# Expose whether we have Java and Python support through defines
ifdef JAVA_HOME
  CFLAGS += -DMESOS_HAS_JAVA
  CXXFLAGS += -DMESOS_HAS_JAVA
endif
ifdef PYTHON_HEADERS
  CFLAGS += -DMESOS_HAS_PYTHON
  CXXFLAGS += -DMESOS_HAS_PYTHON
endif

# Add libev to LDFLAGS.
LDFLAGS += -L$(LIBEV)/.libs

# Add libev, libprocess, pthread, and dl to LIBS.
LIBS += -lglog -lgtest -lprocess -lev -lpthread -ldl -lzookeeper_st -lsqlite3

NEXUS_EXES = nexus-master nexus-slave nexus-local nexus-launcher \
	     test-framework test-executor cpp-test-framework cpp-test-executor \
	     memhog memhog-executor

ifeq ($(OS_NAME),solaris)
  NEXUS_EXES += nexus-projd
endif

SCHED_LIB = libnexus_sched.a
EXEC_LIB = libnexus_exec.a

# C/C++ library has both the scheduler and executor libraries.
NEXUS_LIB = libnexus++.a

NEXUS_LIBS = $(SCHED_LIB) $(EXEC_LIB) $(NEXUS_LIB)

MASTER_OBJ = master.o allocator_factory.o simple_allocator.o
SLAVE_OBJ = slave.o launcher.o isolation_module_factory.o \
	    process_based_isolation_module.o
COMMON_OBJ = fatal.o hash_pid.o messages.o lock.o master_detector.o url_processor.o zookeeper.o event_history.o
EXEC_LIB_OBJ = nexus_exec.o
SCHED_LIB_OBJ = nexus_sched.o nexus_local.o params.o
TEST_OBJ = tests/main.o tests/test_master.o tests/test_resources.o \
	   tests/external_test.o tests/test_sample_frameworks.o

ifeq ($(OS_NAME),solaris)
  SLAVE_OBJ += solaris_project_isolation_module.o
endif

ifeq ($(OS_NAME),linux)
  SLAVE_OBJ += lxc_isolation_module.o
endif

ALL_OBJ = $(MASTER_OBJ) $(SLAVE_OBJ) $(COMMON_OBJ) \
	  $(SCHED_LIB_OBJ) $(EXEC_LIB_OBJ) $(TEST_OBJ)

# Setup libraries from the SWIG world.
ifeq ($(OS_NAME),darwin)
  JAVA_LIB = swig/java/libnexus.dylib
else
  JAVA_LIB = swig/java/libnexus.so
endif

PYTHON_LIB = swig/python/_nexus.so

RUBY_LIB = swig/ruby/nexus.so


default: all

-include $(patsubst %.o, %.d, $(ALL_OBJ))
-include $(patsubst %, %.d, $(NEXUS_EXES))

$(ALL_OBJ): %.o: %.cpp
	$(CXX) -c $(CXXFLAGS) -o $@ $<

$(NEXUS_LIBS): $(COMMON_OBJ) third_party/libprocess/libprocess.a

$(NEXUS_EXES): $(COMMON_OBJ) third_party/libprocess/libprocess.a

$(SCHED_LIB): $(SCHED_LIB_OBJ) $(MASTER_OBJ) $(SLAVE_OBJ) $(COMMON_OBJ)
	$(AR) rcs $@ $^ third_party/libprocess/libprocess.a $(GLOG)/.libs/libglog.a $(LIBEV)/.libs/libev.a

$(EXEC_LIB): $(EXEC_LIB_OBJ) $(COMMON_OBJ)
	$(AR) rcs $@ $^

$(NEXUS_LIB): $(SCHED_LIB_OBJ) $(EXEC_LIB_OBJ) $(MASTER_OBJ) $(SLAVE_OBJ) $(COMMON_OBJ)
	$(AR) rcs $@ $^

webui/master/swig/master_wrap.cpp: webui/master/swig/master.i master_state.hpp master_webui.hpp master.hpp config.hpp
ifeq ($(WITH_WEBUI),1)
	$(SWIG) -c++ -python -outdir webui/master/swig -o $@ -I../include $<
else
	echo "" > $@
endif

webui/master/swig/master_wrap.o: webui/master/swig/master_wrap.cpp config.hpp
	$(CXX) -c $(CXXFLAGS) $(WEBUI_FLAGS) -I. -o $@ $<

master_webui.o: master_webui.cpp config.hpp messages.hpp
	$(CXX) -c $(CXXFLAGS) $(WEBUI_FLAGS) -o $@ $<

nexus-master: master_main.cpp $(MASTER_OBJ) $(COMMON_OBJ) master_webui.o webui/master/swig/master_wrap.o
	$(CXX) $(CXXFLAGS) $(WEBUI_FLAGS) -o $@ $< $(MASTER_OBJ) master_webui.o webui/master/swig/master_wrap.o $(COMMON_OBJ) $(LDFLAGS) $(LIBS)

webui/slave/swig/slave_wrap.cpp: webui/slave/swig/slave.i slave_state.hpp slave_webui.hpp slave.hpp config.hpp
ifeq ($(WITH_WEBUI),1)
	$(SWIG) -c++ -python -outdir webui/slave/swig -o $@ -I../include $<
else
	echo "" > $@
endif

webui/slave/swig/slave_wrap.o: webui/slave/swig/slave_wrap.cpp config.hpp
	$(CXX) -c $(CXXFLAGS) $(WEBUI_FLAGS) -I. -o $@ $<

slave_webui.o: slave_webui.cpp config.hpp messages.hpp
	$(CXX) -c $(CXXFLAGS) $(WEBUI_FLAGS) -o $@ $<

nexus-slave: slave_main.cpp $(SLAVE_OBJ) $(COMMON_OBJ) slave_webui.o webui/slave/swig/slave_wrap.o
	$(CXX) $(CXXFLAGS) $(WEBUI_FLAGS) -o $@ $< $(SLAVE_OBJ) slave_webui.o webui/slave/swig/slave_wrap.o $(COMMON_OBJ) $(LDFLAGS) $(LIBS)

nexus-launcher: launcher_main.cpp launcher.o fatal.o
	$(CXX) $(CXXFLAGS) -o $@ $< launcher.o fatal.o $(LDFLAGS) $(LIBS)

nexus-projd: projd.cpp $(COMMON_OBJ)
	$(CXX) $(CXXFLAGS) -o $@ $< $(COMMON_OBJ) $(LDFLAGS) $(LIBS)

nexus-local: local.cpp nexus_local.o $(MASTER_OBJ) $(SLAVE_OBJ) $(COMMON_OBJ)
	$(CXX) $(CXXFLAGS) -o $@ $< nexus_local.o $(MASTER_OBJ) $(SLAVE_OBJ) $(COMMON_OBJ) $(LDFLAGS) $(LIBS)

ALLTESTS_OBJ = $(TEST_OBJ) $(MASTER_OBJ) $(SLAVE_OBJ) $(SCHED_LIB_OBJ) $(EXEC_LIB_OBJ) $(COMMON_OBJ)

alltests: $(ALLTESTS_OBJ) $(NEXUS_EXES) java python
	$(CXX) $(CXXFLAGS) -o $@ $(ALLTESTS_OBJ) $(LDFLAGS) $(LIBS)

test-framework: test_framework.cpp $(SCHED_LIB) third_party/libprocess/libprocess.a
	$(CXX) $(CXXFLAGS) -o $@ $< $(LDFLAGS) -L. -lnexus_sched $(LIBS)

test-executor: test_exec.cpp $(EXEC_LIB) third_party/libprocess/libprocess.a
	g++ $(CXXFLAGS) -o $@ $< $(LDFLAGS) -L. -lnexus_exec $(LIBS)

cpp-test-framework: cpp_test_framework.cpp $(NEXUS_LIB) third_party/libprocess/libprocess.a
	$(CXX) $(CXXFLAGS) -o $@ $< -L. $(LDFLAGS) -lnexus++ $(LIBS) 

cpp-test-executor: cpp_test_executor.cpp $(NEXUS_LIB) third_party/libprocess/libprocess.a
	$(CXX) $(CXXFLAGS) -o $@ $< -L. $(LDFLAGS) -lnexus++ $(LIBS) 

memhog: memhog.cpp $(NEXUS_LIB) third_party/libprocess/libprocess.a
	$(CXX) $(CXXFLAGS) -o $@ $< -L. $(LDFLAGS) -lnexus++ $(LIBS) 

memhog-executor: memhog_executor.cpp $(NEXUS_LIB) third_party/libprocess/libprocess.a
	$(CXX) $(CXXFLAGS) -o $@ $< -L. $(LDFLAGS) -lnexus++ $(LIBS) 

java: $(JAVA_LIB) swig/java/nexus.jar swig/java/TestFramework.class swig/java/TestExecutor.class swig/java/TestExceptionFramework.class swig/java/TestExceptionExecutor.class

python: $(PYTHON_LIB)

ruby: $(RUBY_LIB)

swig/java/nexus.jar: $(JAVA_LIB)
ifdef JAVA_HOME
	$(JAVA_HOME)/bin/javac -sourcepath swig/java -d swig/java swig/java/nexus/*.java
	patch -N swig/java/nexus/nexusJNI.java < swig/java/nexusJNI.java.patch1 || echo -n
	patch swig/java/nexus/nexusJNI.java < swig/java/nexusJNI.java.patch2 || echo -n
	$(JAVA_HOME)/bin/jar cf $@ -C swig/java nexus
endif

$(JAVA_LIB): swig/nexus.i $(NEXUS_LIB)
ifdef JAVA_HOME
	rm -f swig/java/nexus/*
	mkdir -p swig/java/nexus
	$(SWIG) -c++ -java -I../include -o swig/java/nexus_wrap.cpp -outdir swig/java/nexus -package nexus swig/nexus.i
	$(CXX) $(CXXFLAGS) -shared -o $@ swig/java/nexus_wrap.cpp -I$(JAVA_HOME)/include -I$(JAVA_HOME)/include/$(OS_NAME) -L. $(LDFLAGS) -lnexus++ $(LIBS)
endif

swig/java/TestFramework.class: $(JAVA_LIB) swig/java/nexus.jar swig/java/TestFramework.java
ifdef JAVA_HOME
	$(JAVA_HOME)/bin/javac -cp swig/java/nexus.jar -sourcepath swig/java -d swig/java swig/java/TestFramework.java
endif

swig/java/TestExecutor.class: $(JAVA_LIB) swig/java/nexus.jar swig/java/TestExecutor.java
ifdef JAVA_HOME
	$(JAVA_HOME)/bin/javac -cp swig/java/nexus.jar -sourcepath swig/java -d swig/java swig/java/TestExecutor.java
endif

swig/java/TestExceptionFramework.class: $(JAVA_LIB) swig/java/nexus.jar swig/java/TestExceptionFramework.java
ifdef JAVA_HOME
	$(JAVA_HOME)/bin/javac -cp swig/java/nexus.jar -sourcepath swig/java -d swig/java swig/java/TestExceptionFramework.java
endif

swig/java/TestExceptionExecutor.class: $(JAVA_LIB) swig/java/nexus.jar swig/java/TestExceptionExecutor.java
ifdef JAVA_HOME
	$(JAVA_HOME)/bin/javac -cp swig/java/nexus.jar -sourcepath swig/java -d swig/java swig/java/TestExceptionExecutor.java
endif

$(PYTHON_LIB): swig/nexus.i $(NEXUS_LIB)
ifdef PYTHON_HEADERS
	$(SWIG) -c++ -python -threads -I../include -o swig/python/nexus_wrap.cpp -outdir swig/python swig/nexus.i
	$(CXX) $(CXXFLAGS) -shared -o $@ swig/python/nexus_wrap.cpp -I$(PYTHON_HEADERS) -L. $(LDFLAGS) -lnexus++ $(LIBS)
endif

$(RUBY_LIB): swig/nexus.i $(NEXUS_LIB)
ifdef RUBY_HEADERS
	$(SWIG) -c++ -ruby -I../include -o swig/ruby/nexus_wrap.cpp -outdir swig/ruby -autorename swig/nexus.i
	$(CXX) $(CXXFLAGS) -shared -o $@ swig/ruby/nexus_wrap.cpp -I$(RUBY_HEADERS) -L. $(LDFLAGS) -lnexus++ $(LIBS)
endif

test: all
	./alltests

third_party:
	$(MAKE) -C third_party/libprocess
	$(MAKE) -C $(GLOG)
	$(MAKE) -C $(GTEST)
	$(MAKE) -C $(SQLITE)
ifeq ($(LOCAL_ZOOKEEPER),yes)
	$(MAKE) -C $(ZOOKEEPER)
endif

all: third_party $(NEXUS_LIBS) $(NEXUS_EXES) alltests java python ruby

clean:
	$(MAKE) -C third_party/libprocess clean
	$(MAKE) -C $(GLOG) clean
	$(MAKE) -C $(GTEST) clean
	$(MAKE) -C $(SQLITE) clean
ifeq ($(LOCAL_ZOOKEEPER),yes)
	$(MAKE) -C $(ZOOKEEPER) clean
endif
	rm -f $(patsubst %.o, %.d, $(ALL_OBJ))
	rm -f $(ALL_OBJ)
	rm -f $(NEXUS_LIBS)
	rm -f $(NEXUS_EXES)
	rm -f $(JAVA_LIB) $(PYTHON_LIB) $(RUBY_LIB)
	rm -rf $(JAVA_LIB).dSYM $(PYTHON_LIB).dSYM $(RUBY_LIB).dSYM
	rm -f swig/*/nexus_wrap.cpp
	rm -f swig/*/nexus_wrap.h
	rm -f swig/*/*.o
	rm -f swig/*/*.d
	rm -f swig/java/nexus.jar
	rm -f swig/java/nexus/*
	rm -f swig/java/*.class
	rm -f swig/python/nexus.py
	rm -f swig/python/nexus.pyc
	rm -f master_webui.o
	rm -f master_webui.d
	rm -f webui/master/swig/master_wrap.h
	rm -f webui/master/swig/master_wrap.cpp
	rm -f webui/master/swig/master_wrap.o
	rm -f webui/master/swig/master_wrap.d
	rm -f webui/master/swig/master.py
	rm -f webui/master/swig/master.pyc
	rm -f slave_webui.o
	rm -f slave_webui.d
	rm -f webui/slave/swig/slave_wrap.h
	rm -f webui/slave/swig/slave_wrap.cpp
	rm -f webui/slave/swig/slave_wrap.o
	rm -f webui/slave/swig/slave_wrap.d
	rm -f webui/slave/swig/slave.py
	rm -f webui/slave/swig/slave.pyc
	rm -f TAGS

.PHONY: default third_party all clean java python ruby test
