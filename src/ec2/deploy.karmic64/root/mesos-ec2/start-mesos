#!/bin/bash
cd /root/mesos-ec2

MASTER="`cat master`"
MASTER1="`cat master | head -1`"
SLAVES="`cat slaves`"
ZOO1="`cat zoo | head -1`"
ZOO="`cat zoo`"

ISFT="`cat zoo | wc -l`"

SSH_OPTS="-o StrictHostKeyChecking=no -o ConnectTimeout=2"

if [[ $ISFT == 0 ]]; then
  master_arg="1@${MASTER}:1111"
else
  master_arg="zoo://"
  add=""
  for zoo in $ZOO; do
    master_arg+=$add
    master_arg+=$zoo":2181"
    add=","
  done
fi

echo "Running with master parameter: "$master_arg

if [[ $ISFT != 0 ]]; then
  echo "Starting ZooKeeper on $ZOO"
  for zoo in $ZOO; do
    ssh $SSH_OPTS $zoo "/root/mesos/src/third_party/zookeeper-*/bin/zkServer.sh start </dev/null >/dev/null"
  done

  sleep 2

  masterid=1
  for master in $MASTER; do
    echo "Starting master $masterid on $MASTER"
    ssh $SSH_OPTS $master "/root/mesos-ec2/mesos-daemon mesos-master -p 1111 -f $master_arg </dev/null >/dev/null"
    masterid=$(($masterid+1))
  done
else
  echo "Starting master on $MASTER1"
  ssh $SSH_OPTS $MASTER1 "/root/mesos-ec2/mesos-daemon mesos-master -p 1111 </dev/null >/dev/null"
fi

COUNT=''
CPUS=''
MEM=''

read -t 5 -p "If you would like to launch more than one slave per machine, please hit enter/return within the next 5 seconds."

if [[ "$?" == "0" ]]; then
  while [[ "$COUNT" == '' ]] ; do
    read -p "Please specify the number of slaves per machine: " COUNT
  done

  while [[ "$CPUS" == '' ]] ; do
    read -p "Please specify the number of cpus per slave: " CPUS
  done

  CPUS="--cpus $CPUS"

  while [[ "$MEM" == '' ]] ; do
    read -p "Please specify the amount of memory per slave: " MEM
  done

  MEM="--mem $MEM"
else
  COUNT='1'
  echo
fi

for slave in $SLAVES; do
  echo "Starting $COUNT slave(s) on $slave"
  ssh $SSH_OPTS $slave "for ((i = 0; i < $COUNT; i++)); do /root/mesos-ec2/mesos-daemon mesos-slave ${master_arg} $CPUS $MEM; done </dev/null >/dev/null" &
  sleep 0.1
done
wait

if [[ $ISFT != 0 ]]; then
  echo "ZooKeeper is running at"
  for zoo in $ZOO; do
    echo "      $zoo:2181"
  done
fi

echo "Everything's started! You can view the master Web UI at"
for master in $MASTER; do
  echo "      http://$master:8080"
done
